#pragma once

/* Generated with cbindgen:0.20.0 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>

namespace ha {
namespace fx_collection_rs {
namespace trance_gate {

struct Context;

using RealType = float;

using AudioFrame = RealType[4];

extern "C" {

Context *tg_create();

void tg_destroy(Context *tg_context);

void set_tempo(Context *context, RealType tempo_bpm);

void trigger(Context *context, RealType delay_len, RealType fade_in_len);

void reset(Context *context);

void reset_step_pos(Context *context, uintptr_t value);

uintptr_t get_step_pos(Context *context);

void process(Context *context, const AudioFrame *inputs, AudioFrame *outputs);

void set_sample_rate(Context *context, RealType value);

void set_step(Context *context, uintptr_t channel, uintptr_t step, RealType value_normalized);

void set_width(Context *context, RealType value);

void set_shuffle_amount(Context *context, RealType value);

void set_stereo_mode(Context *context, bool value);

void set_step_len(Context *context, RealType value);

void update_project_time_music(Context *context, RealType value);

void set_step_count(Context *context, uintptr_t value);

void set_contour(Context *context, RealType value_secs);

void set_fade_in(Context *context, RealType value);

void set_delay(Context *context, RealType value);

void set_mix(Context *context, RealType value);

} // extern "C"

} // namespace trance_gate
} // namespace fx_collection_rs
} // namespace ha
