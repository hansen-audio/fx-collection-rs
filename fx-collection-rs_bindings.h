#pragma once

/* Generated with cbindgen:0.20.0 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>

namespace ha {
namespace fx_collection_rs {
namespace trance_gate {

struct TranceGate;

using RealType = float;

using AudioFrame = RealType[4];

extern "C" {

TranceGate *tg_create();

void tg_destroy(TranceGate *tg_context);

void set_tempo(TranceGate *context, RealType tempo_bpm);

void trigger(TranceGate *context, RealType delay_len, RealType fade_in_len);

void reset(TranceGate *context);

void reset_step_pos(TranceGate *context, uintptr_t value);

uintptr_t get_step_pos(TranceGate *context);

void process(TranceGate *context, const AudioFrame *inputs, AudioFrame *outputs);

void set_sample_rate(TranceGate *context, RealType value);

void set_step(TranceGate *context, uintptr_t channel, uintptr_t step, RealType value_normalized);

void set_width(TranceGate *context, RealType value);

void set_shuffle_amount(TranceGate *context, RealType value);

void set_stereo_mode(TranceGate *context, bool value);

void set_step_len(TranceGate *context, RealType value);

void update_project_time_music(TranceGate *context, RealType value);

void set_step_count(TranceGate *context, uintptr_t value);

void set_contour(TranceGate *context, RealType value_secs);

void set_fade_in(TranceGate *context, RealType value);

void set_delay(TranceGate *context, RealType value);

void set_mix(TranceGate *context, RealType value);

} // extern "C"

} // namespace trance_gate
} // namespace fx_collection_rs
} // namespace ha
